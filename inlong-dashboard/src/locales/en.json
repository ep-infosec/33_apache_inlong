{
  "basic.Edit": "Edit",
  "basic.Detail": "Detail",
  "basic.Operating": "Operate",
  "basic.OperatingSuccess": "Operating Success",
  "basic.Save": "Save",
  "basic.Cancel": "Cancel",
  "basic.Create": "Create",
  "basic.Delete": "Delete",
  "basic.DeleteConfirm": "Are you sure to delete?",
  "basic.DeleteSuccess": "Delete Success",
  "basic.Status": "Status",
  "basic.Creator": "Creator",
  "basic.CreateTime": "CreateTime",
  "basic.Yes": "Yes",
  "basic.No": "No",
  "meta.Sources.Name": "Source Name",
  "meta.Sources.Type": "Type",
  "meta.Sources.File.SerializationType": "File type",
  "meta.Sources.File.DataSourceIP": "Data source IP",
  "meta.Sources.File.FilePath": "File path",
  "meta.Sources.File.FilePathHelp": "Must be an absolute path and support regular expressions, such as: /data/.*.log",
  "meta.Sources.File.IpRule": "Please enter the IP address correctly",
  "meta.Sources.File.TimeOffset": "Time offset",
  "meta.Sources.File.TimeOffsetHelp": "The file will be collected from a certain time,' 1m' means 1 minute later,' -1m' means 1 minute before, and m(minute), h(hour), d(day) are supported. If it is empty, the file will be collected from the current time",
  "meta.Sources.Db.Server": "Server",
  "meta.Sources.Db.Port": "Port",
  "meta.Sources.Db.ServerTimezone": "Timezone",
  "meta.Sources.Db.IntervalMs": "Recording Offset",
  "meta.Sources.Db.User": "User",
  "meta.Sources.Db.Password": "Password",
  "meta.Sources.Db.HistoryFilename": "History Filename",
  "meta.Sources.Db.AllMigration": "AllMigration",
  "meta.Sources.Db.TableWhiteList": "Table WhiteList",
  "meta.Sources.Db.TableWhiteListHelp": "The whitelist should be a comma-separated list of regular expressions that match the fully-qualified names of tables to be monitored. Fully-qualified names for tables are of the form <databaseName>.<tableName>, the dbName and tableName can be configured with regular expressions. For example: test_db.order*, inlong_db*.user*, means to collect all tables starting with order in the test_db database + all tables starting with user under all databases starting with inlong_db.",
  "meta.Sources.Mongodb.Hosts": "Hosts",
  "meta.Sources.Mongodb.Username": "Username",
  "meta.Sources.Mongodb.Password": "Password",
  "meta.Sources.Mongodb.Database": "Database",
  "meta.Sources.Mongodb.Collection": "Collection",
  "meta.Sources.Mongodb.PrimaryKey": "PrimaryKey",
  "meta.Sources.Oracle.Hostname": "Hostname",
  "meta.Sources.Oracle.Port": "Port",
  "meta.Sources.Oracle.Username": "Username",
  "meta.Sources.Oracle.Password": "Password",
  "meta.Sources.Oracle.Database": "Database",
  "meta.Sources.Oracle.SchemaName": "SchemaName",
  "meta.Sources.Oracle.TableName": "TableName",
  "meta.Sources.Oracle.AllMigration": "AllMigration",
  "meta.Sources.Oracle.ScanStartupMode": "Scan startup mode",
  "meta.Sources.Oracle.PrimaryKey": "PrimaryKey",
  "meta.Sources.PostgreSQL.Hostname": "Hostname",
  "meta.Sources.PostgreSQL.Port": "Port",
  "meta.Sources.PostgreSQL.Username": "Username",
  "meta.Sources.PostgreSQL.Password": "Password",
  "meta.Sources.PostgreSQL.Database": "Database",
  "meta.Sources.PostgreSQL.SchemaName": "SchemaName",
  "meta.Sources.PostgreSQL.TableName": "TableName",
  "meta.Sources.PostgreSQL.decodingPluginName": "Decoding Plugin Name",
  "meta.Sources.PostgreSQL.PrimaryKey": "PrimaryKey",
  "meta.Sources.SQLServer.Hostname": "Hostname",
  "meta.Sources.SQLServer.Port": "Port",
  "meta.Sources.SQLServer.Username": "Username",
  "meta.Sources.SQLServer.Password": "Password",
  "meta.Sources.SQLServer.Database": "Database",
  "meta.Sources.SQLServer.SchemaName": "SchemaName",
  "meta.Sources.SQLServer.TableName": "TableName",
  "meta.Sources.SQLServer.AllMigration": "AllMigration",
  "meta.Sources.SQLServer.ServerTimezone": "Timezone",
  "meta.Sources.SQLServer.PrimaryKey": "PrimaryKey",
  "meta.Sources.Redis.Hostname": "Hostname",
  "meta.Sources.Redis.Port": "Port",
  "meta.Sources.Redis.Username": "Username",
  "meta.Sources.Redis.Password": "Password",
  "meta.Sources.Redis.Database": "Database Number",
  "meta.Sources.Redis.PrimaryKey": "PrimaryKey",
  "meta.Sources.Redis.RedisCommand": "RedisCommand",
  "meta.Sources.Redis.RedisMode": " Deploy mode",
  "meta.Sources.Redis.ClusterNodes": "Cluster Nodes",
  "meta.Sources.Redis.MasterName": "MasterName",
  "meta.Sources.Redis.SentinelsInfo": "SentinelsInfo",
  "meta.Sources.Redis.AdditionalKey": "AdditionalKey",
  "meta.Sources.Redis.Timeout": "Timeout",
  "meta.Sources.Redis.SoTimeout": "SoTimeout",
  "meta.Sources.Redis.MaxTotal": "Max Total",
  "meta.Sources.Redis.MaxIdle": "Max Idle",
  "meta.Sources.Redis.MinIdle": "Min Idle",
  "meta.Sources.Redis.LookupAsync": "Lookup Async",
  "meta.Sources.Redis.LookupCacheMaxRows": "Cache Max Rows",
  "meta.Sources.Redis.LookupCacheTtl": "Lookup Cache TTL",
  "meta.Sources.Redis.LookupMaxRetries": "Lookup Max Retries",
  "meta.Sources.MQTT.Username": "Username",
  "meta.Sources.MQTT.Password": "Password",
  "meta.Sources.MQTT.MqttVersion": "MQTT Version",
  "meta.Sinks.SinkName": "Name",
  "meta.Sinks.SinkNameRule": "At the beginning of English letters, only English letters, numbers, minus, and underscores",
  "meta.Sinks.SinkType": "Type",
  "meta.Sinks.Description": "SinkDescription",
  "meta.Sinks.SourceFieldName": "SourceFieldName",
  "meta.Sinks.SourceFieldType": "SourceFieldType",
  "meta.Sinks.SourceFieldNameRule": "At the beginning of English letters, only English letters, numbers, and underscores",
  "meta.Sinks.Username": "Username",
  "meta.Sinks.Password": "Password",
  "meta.Sinks.EnableCreateResource": "EnableCreateResource",
  "meta.Sinks.EnableCreateResourceHelp": "If the library table already exists and does not need to be modified, select [Do not create], otherwise select [Create], and the system will automatically create the resource.",
  "meta.Sinks.Hive.FileFormat": "File format",
  "meta.Sinks.Hive.Day": "Day(s)",
  "meta.Sinks.Hive.DataEncoding": "Data encoding",
  "meta.Sinks.Hive.DataSeparator": "Data separator",
  "meta.Sinks.Hive.DataSeparator.Space": "Space",
  "meta.Sinks.Hive.DataSeparator.Asterisk": "Asterisk(*)",
  "meta.Sinks.Hive.DataSeparator.Comma": "Comma(,)",
  "meta.Sinks.Hive.DataSeparator.Semicolon": "Semicolon(;)",
  "meta.Sinks.Hive.DataSeparator.VerticalLine": "Vertical line (|)",
  "meta.Sinks.Hive.DataSeparator.DoubleQuotes": "Double quotes(\")",
  "meta.Sinks.Hive.PartitionFieldList": "PartitionFieldList",
  "meta.Sinks.Hive.PartitionFieldListHelp": "If the field type is timestamp, you must set the format of the field value, support MICROSECONDS, MILLISECONDS, SECONDS, SQL, ISO_8601, and custom, such as: yyyy-MM-dd HH:mm:ss, etc.",
  "meta.Sinks.Hive.DbName": "DbName",
  "meta.Sinks.Hive.TableName": "TableName",
  "meta.Sinks.Hive.FieldNameRule": "At the beginning of lowercase letters, only lowercase letters, numbers, and underscores",
  "meta.Sinks.Hive.ConnectionTest": "Test connection",
  "meta.Sinks.Hive.ConnectionSucceeded": "Connection succeeded",
  "meta.Sinks.Hive.ConnectionFailed": "Connection failed",
  "meta.Sinks.Hive.FieldName": "FieldName",
  "meta.Sinks.Hive.FieldType": "FieldType",
  "meta.Sinks.Hive.FieldDescription": "Field description",
  "meta.Sinks.Hive.IsMetaField": "IsMetaField",
  "meta.Sinks.Hive.FieldFormat": "FieldFormat",
  "meta.Sinks.Hive.DataNodeName": "DataNode",
  "meta.Sinks.ClickHouse.DbName": "DbName",
  "meta.Sinks.ClickHouse.TableName": "TableName",
  "meta.Sinks.ClickHouse.FlushInterval": "FlushInterval",
  "meta.Sinks.ClickHouse.FlushIntervalUnit": "S",
  "meta.Sinks.ClickHouse.FlushRecord": "FlushRecord",
  "meta.Sinks.ClickHouse.FlushRecordUnit": "items",
  "meta.Sinks.ClickHouse.RetryTimes": "RetryTimes",
  "meta.Sinks.ClickHouse.RetryTimesUnit": "items",
  "meta.Sinks.ClickHouse.IsDistributed": "IsDistributedTable",
  "meta.Sinks.ClickHouse.Yes": "Yes",
  "meta.Sinks.ClickHouse.No": "No",
  "meta.Sinks.ClickHouse.PartitionStrategy": "PartitionStrategy",
  "meta.Sinks.ClickHouse.PartitionFields": "PartitionFields",
  "meta.Sinks.ClickHouse.FieldName": "FieldName",
  "meta.Sinks.ClickHouse.FieldNameRule": "At the beginning of English letters, only English letters, numbers, and underscores",
  "meta.Sinks.ClickHouse.FieldType": "FieldType",
  "meta.Sinks.ClickHouse.FieldDescription": "FieldDescription",
  "meta.Sinks.ClickHouse.Engine": "Engine",
  "meta.Sinks.ClickHouse.OrderBy": "OrderBy",
  "meta.Sinks.ClickHouse.PartitionBy": "PartitionBy",
  "meta.Sinks.ClickHouse.PrimaryKey": "PrimaryKey",
  "meta.Sinks.ClickHouse.CompressionCode": "CompressionCode",
  "meta.Sinks.ClickHouse.TtlExpr": "TtlExpr",
  "meta.Sinks.ClickHouse.DataNodeName": "DataNode",
  "meta.Sinks.ES.DataNodeName": "DataNode",
  "meta.Sinks.ES.IndexName": "IndexName",
  "meta.Sinks.ES.FlushRecord": "FlushRecord",
  "meta.Sinks.ES.FlushRecordUnit": "items",
  "meta.Sinks.ES.RetryTimes": "RetryTimes",
  "meta.Sinks.ES.RetryTimesUnit": "items",
  "meta.Sinks.ES.FieldName": "FieldName",
  "meta.Sinks.ES.FieldNameRule": "At the beginning of English letters, only English letters, numbers, and underscores",
  "meta.Sinks.ES.FieldType": "FieldType",
  "meta.Sinks.ES.FieldDescription": "FieldDescription",
  "meta.Sinks.ES.DateFormat": "DateFormat",
  "meta.Sinks.Kafka.Server": "Server",
  "meta.Sinks.Kafka.SerializationType": "SerializationType",
  "meta.Sinks.Kafka.PartitionNum": "PartitionNum",
  "meta.Sinks.Kafka.AutoOffsetReset": "AutoOffsetReset",
  "meta.Sinks.Iceberg.DbName": "DbName",
  "meta.Sinks.Iceberg.TableName": "TableName",
  "meta.Sinks.Iceberg.FileFormat": "FileFormat",
  "meta.Sinks.Iceberg.Description": "Description",
  "meta.Sinks.Iceberg.ExtList": "ExtList",
  "meta.Sinks.Iceberg.DataConsistency": "DataConsistency",
  "meta.Sinks.Iceberg.FieldName": "FieldName",
  "meta.Sinks.Iceberg.FieldNameRule": "At the beginning of English letters or underscore, only English letters, numbers, and underscores",
  "meta.Sinks.Iceberg.FieldType": "FieldType",
  "meta.Sinks.Iceberg.FieldDescription": "FieldDescription",
  "meta.Sinks.Iceberg.PartitionStrategy": "PartitionStrategy",
  "meta.Sinks.Iceberg.DataNodeName": "DataNode",
  "meta.Sinks.Hudi.DbName": "DbName",
  "meta.Sinks.Hudi.TableName": "TableName",
  "meta.Sinks.Hudi.Warehouse": "Warehouse",
  "meta.Sinks.Hudi.FileFormat": "FileFormat",
  "meta.Sinks.Hudi.Description": "Description",
  "meta.Sinks.Hudi.ExtList": "ExtList",
  "meta.Sinks.Hudi.DataConsistency": "DataConsistency",
  "meta.Sinks.Hudi.FieldName": "FieldName",
  "meta.Sinks.Hudi.FieldNameRule": "At the beginning of English letters or underscore, only English letters, numbers, and underscores",
  "meta.Sinks.Hudi.FieldType": "FieldType",
  "meta.Sinks.Hudi.FieldDescription": "FieldDescription",
  "meta.Sinks.Hudi.PrimaryKey": "PrimaryKey",
  "meta.Sinks.Hudi.PrimaryKeyHelper": "The Primary key fields, separated by commas (,)",
  "meta.Sinks.Hudi.PartitionFieldList": "PartitionFieldList",
  "meta.Sinks.Hudi.PartitionFieldListHelp": "If the field type is timestamp, you must set the format of the field value, support MICROSECONDS, MILLISECONDS, SECONDS, SQL, ISO_8601, and custom, such as: yyyy-MM-dd HH:mm:ss, etc.",
  "meta.Sinks.Hudi.ExtListHelper": "The DDL attribute of the hudi table needs to be prefixed with 'ddl.'",
  "meta.Sinks.Greenplum.TableName": "TableName",
  "meta.Sinks.Greenplum.PrimaryKey": "PrimaryKey",
  "meta.Sinks.Greenplum.FieldName": "FieldName",
  "meta.Sinks.Greenplum.FieldNameRule": "At the beginning of English letters, only English letters, numbers, and underscores",
  "meta.Sinks.Greenplum.FieldType": "FieldType",
  "meta.Sinks.Greenplum.IsMetaField": "IsMetaField",
  "meta.Sinks.Greenplum.FieldFormat": "FieldFormat",
  "meta.Sinks.Greenplum.FieldDescription": "FieldDescription",
  "meta.Sinks.MySQL.TableName": "TableName",
  "meta.Sinks.MySQL.PrimaryKey": "PrimaryKey",
  "meta.Sinks.MySQL.FieldName": "FieldName",
  "meta.Sinks.MySQL.FieldNameRule": "At the beginning of English letters, only English letters, numbers, and underscores",
  "meta.Sinks.MySQL.FieldType": "FieldType",
  "meta.Sinks.MySQL.IsMetaField": "IsMetaField",
  "meta.Sinks.MySQL.FieldFormat": "FieldFormat",
  "meta.Sinks.MySQL.FieldDescription": "FieldDescription",
  "meta.Sinks.Oracle.TableName": "TableName",
  "meta.Sinks.Oracle.PrimaryKey": "PrimaryKey",
  "meta.Sinks.Oracle.FieldName": "FieldName",
  "meta.Sinks.Oracle.FieldNameRule": "At the beginning of English letters, only English letters, numbers, and underscores",
  "meta.Sinks.Oracle.FieldType": "FieldType",
  "meta.Sinks.Oracle.IsMetaField": "IsMetaField",
  "meta.Sinks.Oracle.FieldFormat": "FieldFormat",
  "meta.Sinks.Oracle.FieldDescription": "FieldDescription",
  "meta.Sinks.PostgreSQL.DbName": "DbName",
  "meta.Sinks.PostgreSQL.TableName": "TableName",
  "meta.Sinks.PostgreSQL.PrimaryKey": "PrimaryKey",
  "meta.Sinks.PostgreSQL.FieldName": "FieldName",
  "meta.Sinks.PostgreSQL.FieldNameRule": "At the beginning of English letters, only English letters, numbers, and underscores",
  "meta.Sinks.PostgreSQL.FieldType": "FieldType",
  "meta.Sinks.PostgreSQL.IsMetaField": "IsMetaField",
  "meta.Sinks.PostgreSQL.FieldFormat": "FieldFormat",
  "meta.Sinks.PostgreSQL.FieldDescription": "FieldDescription",
  "meta.Sinks.SQLServer.SchemaName": "SchemaName",
  "meta.Sinks.SQLServer.AllMigration": "AllMigration",
  "meta.Sinks.SQLServer.ServerTimezone": "ServerTimezone",
  "meta.Sinks.SQLServer.TableName": "TableName",
  "meta.Sinks.SQLServer.PrimaryKey": "PrimaryKey",
  "meta.Sinks.SQLServer.FieldName": "FieldName",
  "meta.Sinks.SQLServer.FieldNameRule": "At the beginning of English letters, only English letters, numbers, and underscores",
  "meta.Sinks.SQLServer.FieldType": "FieldType",
  "meta.Sinks.SQLServer.IsMetaField": "IsMetaField",
  "meta.Sinks.SQLServer.FieldFormat": "FieldFormat",
  "meta.Sinks.SQLServer.FieldDescription": "FieldDescription",
  "meta.Sinks.TDSQLPostgreSQL.SchemaName": "SchemaName",
  "meta.Sinks.TDSQLPostgreSQL.TableName": "TableName",
  "meta.Sinks.TDSQLPostgreSQL.PrimaryKey": "PrimaryKey",
  "meta.Sinks.TDSQLPostgreSQL.FieldName": "FieldName",
  "meta.Sinks.TDSQLPostgreSQL.FieldNameRule": "At the beginning of English letters, only English letters, numbers, and underscores",
  "meta.Sinks.TDSQLPostgreSQL.FieldType": "FieldType",
  "meta.Sinks.TDSQLPostgreSQL.IsMetaField": "IsMetaField",
  "meta.Sinks.TDSQLPostgreSQL.FieldFormat": "FieldFormat",
  "meta.Sinks.TDSQLPostgreSQL.FieldDescription": "FieldDescription",
  "meta.Sinks.Doris.HttpAddress": "Http Address",
  "meta.Sinks.Doris.TableIdentifier": "TableName",
  "meta.Sinks.Doris.LabelPrefix": "Stream Prefix",
  "meta.Sinks.Doris.PrimaryKey": "PrimaryKey",
  "meta.Sinks.Doris.SinkMultipleEnable": "Multiple Enable",
  "meta.Sinks.Doris.SinkMultipleFormat": "Multiple Format",
  "meta.Sinks.Doris.DatabasePattern": "DatabasePattern",
  "meta.Sinks.Doris.TablePattern": "TablePattern",
  "meta.Sinks.Doris.FieldName": "FieldName",
  "meta.Sinks.Doris.FieldType": "FieldType",
  "meta.Sinks.Doris.FieldDescription": "Field description",
  "meta.Sinks.Doris.IsMetaField": "IsMetaField",
  "meta.Sinks.Doris.FieldFormat": "FieldFormat",
  "meta.Sinks.Doris.FieldNameRule": "At the beginning of lowercase letters, only lowercase letters, numbers, and underscores",
  "meta.Sinks.HBase.Namespace": "Namespace",
  "meta.Sinks.HBase.TableName": "TableName",
  "meta.Sinks.HBase.RowKey": "RowKey",
  "meta.Sinks.HBase.ZkQuorum": "ZooKeeper address",
  "meta.Sinks.HBase.ZkNodeParent": "ZooKeeper node parent",
  "meta.Sinks.HBase.BufferFlushMaxSize": "Buffer flush max size",
  "meta.Sinks.HBase.BufferFlushMaxRows": "Buffer flush max rows",
  "meta.Sinks.HBase.BufferFlushInterval": "Buffer flush interval",
  "meta.Sinks.HBase.FlushIntervalUnit": "S",
  "meta.Sinks.HBase.FieldName": "FieldName",
  "meta.Sinks.HBase.FieldNameRule": "At the beginning of English letters, only English letters, numbers, and underscores",
  "meta.Sinks.HBase.FieldType": "FieldType",
  "meta.Sinks.HBase.IsMetaField": "IsMetaField",
  "meta.Sinks.HBase.FieldFormat": "FieldFormat",
  "meta.Sinks.HBase.FieldDescription": "FieldDescription",
  "meta.Group.InlongGroupId": "Inlong Group ID",
  "meta.Group.InlongGroupIdRules": "Only lowercase letters, numbers, minus, and underscores",
  "meta.Group.InlongGroupName": "Inlong Group Name",
  "meta.Group.InlongGroupOwners": "Inlong Group Owners",
  "meta.Group.InlongGroupOwnersExtra": "Can view, modify group info",
  "meta.Group.InlongGroupIntroduction": "Description",
  "meta.Group.DataReportType": "ReportDataTo",
  "meta.Group.DataReportType.DataProxyWithSource": "Report to DataProxy and respond when the DataProxy received data",
  "meta.Group.DataReportType.DataProxyWithSink": "Report to DataProxy and respond after DataProxy sends data",
  "meta.Group.DataReportType.MQ": "Report to MQ and respond when the MQ received data",
  "meta.Group.MQType": "MQ Type",
  "meta.Group.Pulsar.QueueModule": "Queue Module",
  "meta.Group.Pulsar.Parallel": "Parallel",
  "meta.Group.Pulsar.Serial": "Serial",
  "meta.Group.Pulsar.PartitionNum": "Topic Part Nums",
  "meta.Group.Pulsar.EnsembleSuffix": "Number of nodes",
  "meta.Group.Pulsar.EnsembleExtra": "How many nodes are Topic saved to, up to 10 can be configured",
  "meta.Group.Pulsar.WriteQuorumSuffix": "Number of copies",
  "meta.Group.Pulsar.WriteQuorumExtra": "How many copies of each message are saved, up to 10 can be configured",
  "meta.Group.Pulsar.AckQuorumSuffix": "Number of responses",
  "meta.Group.Pulsar.AckQuorumExtra": "The number of ack required for a successful write request, up to 10 can be configured",
  "meta.Group.Pulsar.RetentionTimeExtra": "The save time of the message in the ack state, the message will be deleted when this value is exceeded (up to 14 days)",
  "meta.Group.Pulsar.TtlExtra": "The time-to-live time of the message, messages exceeding this value will be marked as ack (retained for up to 14 days)",
  "meta.Group.Pulsar.RetentionSizeExtra": "Message capacity in ack state, messages exceeding this value will be deleted (-1 means never delete)",
  "meta.Group.TubeMq.NumberOfAccess": "Number of Access",
  "meta.Group.TubeMq.TenThousand/Day": "Ten Thousand / Day",
  "meta.Group.TubeMq.AccessSize": "Access Size",
  "meta.Group.TubeMq.GB/Day": "GB / Day",
  "meta.Group.TubeMq.AccessPeakPerSecond": "PeakRecords",
  "meta.Group.TubeMq.Stripe/Second": "Stripe / Second",
  "meta.Group.TubeMq.SingleStripMaximumLength": "Single Max Length",
  "meta.Group.Kafka.Partition": "Number of partitions",
  "meta.Group.Kafka.ReplicationFactor": "Replications",
  "meta.Group.Status.Approved": "Approved",
  "meta.Group.Status.Draft": "Draft",
  "meta.Group.Status.Cancel": "Cancel",
  "meta.Group.Status.InPlace": "In place",
  "meta.Group.Status.Reject": "Reject",
  "meta.Group.Status.ConfigurationSuccess": "Success",
  "meta.Group.Status.BeSubmitted": "Be submitted",
  "meta.Group.Status.BeApproved": "BeApproved",
  "meta.Group.Status.ConfigurationFailed": "Configuration failed",
  "meta.Stream.StreamId": "Stream ID",
  "meta.Stream.StreamIdRules": "Only lowercase letters, numbers, minus, and underscores",
  "meta.Stream.DataSeparator": "Source data separator",
  "meta.Stream.DataSeparator.Space": "Space",
  "meta.Stream.DataSeparator.Asterisk": "Asterisk(*)",
  "meta.Stream.DataSeparator.Comma": "Comma(,)",
  "meta.Stream.DataSeparator.Semicolon": "Semicolon(;)",
  "meta.Stream.DataSeparator.VerticalLine": "Vertical line (|)",
  "meta.Stream.DataSeparator.DoubleQuotes": "Double quotes(\")",
  "meta.Stream.StreamName": "Stream name",
  "meta.Stream.FieldName": "Field name",
  "meta.Stream.FieldNameRule": "At the beginning of English letters, only English letters, numbers, and underscores",
  "meta.Stream.DataType": "DataType",
  "meta.Stream.DataTypeHelp": "CSV: InLong message type whose message body is raw CSV; Raw-CSV: messages are separated by a specific separator",
  "meta.Stream.FieldType": "FieldType",
  "meta.Stream.FieldComment": "Field comment",
  "meta.Stream.DataEncoding": "Data encoding",
  "meta.Stream.Description": "Description",
  "meta.Stream.SourceDataField": "Source fields",
  "meta.Stream.Status.New": "New",
  "meta.Stream.Status.Pending": "Pending",
  "meta.Stream.Status.Error": "Error",
  "meta.Stream.Status.Success": "Success",
  "meta.Stream.ExecuteWorkflow": "ExecuteWorkflow",
  "meta.Stream.ExecuteConfirm": "Are you sure to execute the workflow?",
  "meta.Stream.ExecuteSuccess": "Execution Success",
  "meta.Consume.ConsumerGroupName": "Consumer Group Name",
  "meta.Consume.TopicName": "Topic Name",
  "meta.Consume.MQType": "MQ Type",
  "meta.Consume.ConsumerGroupNameRules": "Only lowercase letters, numbers, minus, and underscores",
  "meta.Consume.TargetInlongGroupID": "Target Inlong Group ID",
  "meta.Consume.TargetInlongStreamID": "Target Inlong Stream ID",
  "meta.Consume.MQAddress": "MQ Address",
  "meta.Consume.FilterEnabled": "Filter Enabled",
  "meta.Consume.Yes": "Yes",
  "meta.Consume.No": "No",
  "meta.Consume.Owner": "Consume Owners",
  "meta.Consume.OwnersExtra": "Can view, modify consume info",
  "meta.Nodes.Name": "Name",
  "meta.Nodes.Type": "Type",
  "meta.Nodes.Owners": "Owners",
  "meta.Nodes.Description": "Description",
  "meta.Nodes.Hive.DataPath": "DataPath",
  "meta.Nodes.Hive.DataPathHelp": "Storage path of the DB, excluding the table name, such as: hdfs://127.0.0.1:9000/warehouse/inlong.db",
  "meta.Nodes.Hive.ConfDir": "ConfDir",
  "meta.Nodes.Hive.ConfDirHelp": "Upload the hive-site.xml file of the Hive cluster to a directory in HDFS, such as: /user/hive/conf",
  "meta.Nodes.MySQL.Username": "Username",
  "meta.Nodes.MySQL.Password": "Password",
  "meta.Nodes.MySQL.Url": "URL",
  "meta.Nodes.MySQL.BackupUrl": "Backup URL",
  "meta.Nodes.ES.Host": "Host",
  "meta.Nodes.ES.Username": "Username",
  "meta.Nodes.ES.Password": "Password",
  "meta.Nodes.ES.FlushInterval": "FlushInterval",
  "meta.Nodes.ES.ConcurrentRequests": "ConcurrentRequests",
  "meta.Nodes.ES.MaxConnect": "MaxConnect",
  "meta.Nodes.ES.KeywordMaxLength": "Max keyword length",
  "meta.Nodes.ES.IsUseIndexId": "Create index id or not",
  "meta.Nodes.ES.MaxThreads": "MaxThreads",
  "meta.Nodes.Iceberg.Username": "Username",
  "meta.Nodes.Iceberg.Password": "Password",
  "meta.Nodes.Iceberg.Url": "URL",
  "meta.Nodes.Iceberg.Warehouse": "Warehouse",
  "meta.Nodes.Iceberg.CatalogType": "Catalog Type",
  "components.EditableTable.NewLine": "New line",
  "components.FormGenerator.plugins.PleaseChoose": "Please select",
  "components.FormGenerator.plugins.PleaseInput": "Please input",
  "components.TextSwitch.Title": "Advanced options",
  "components.Layout.NavWidget.Logout": "Logout",
  "components.Layout.NavWidget.EditPassword": "EditPassword",
  "components.Layout.NavWidget.PersonalKey": "PersonalKey",
  "components.Layout.NavWidget.Password": "Old password",
  "components.Layout.NavWidget.NewPassword": "New password",
  "components.Layout.NavWidget.ConfirmPassword": "Confirm password",
  "components.Layout.NavWidget.Remind": "Password does not match, please re-enter",
  "components.HighSelect.Customize": "Customize",
  "components.HighSelect.SearchPlaceholder": "Please enter keyword...",
  "configs.pagination.Total": "Total {{total}} items",
  "pages.GroupDashboard.ExecutionLogModal.Re-executingSuccess": "Re-executing success",
  "pages.GroupDashboard.ExecutionLogModal.TaskType": "Task type",
  "pages.GroupDashboard.ExecutionLogModal.ConfirmThatItIsRe-executed": "Confirm that it is re-executed?",
  "pages.GroupDashboard.ExecutionLogModal.CarriedOut": "Carried out",
  "pages.GroupDashboard.ExecutionLogModal.EndTime": "End Time",
  "pages.GroupDashboard.ExecutionLogModal.Processing": "Processing",
  "pages.GroupDashboard.ExecutionLogModal.ExecuteLog": "Execute log",
  "pages.GroupDashboard.ExecutionLogModal.RunResults": "RunResults",
  "pages.GroupDashboard.ExecutionLogModal.Success": "Success",
  "pages.GroupDashboard.ExecutionLogModal.Skip": "Jump over",
  "pages.GroupDashboard.ExecutionLogModal.Fail": "Failure",
  "pages.GroupDashboard.config.Total": "Total",
  "pages.GroupDashboard.config.WaitAssignCount": "WaitAssignCount",
  "pages.GroupDashboard.config.WaitApproveCount": "WaitApproveCount",
  "pages.GroupDashboard.config.Reject": "Reject",
  "pages.GroupDashboard.config.ExecuteLog": "ExecuteLog",
  "pages.GroupDashboard.ConfirmDelete": "Confirm delete?",
  "pages.GroupDashboard.Create": "Create",
  "pages.GroupDashboard.SuccessfullyDeleted": "Successfully deleted",
  "pages.GroupDetail.Info.Back": "Back",
  "pages.GroupDetail.Info.NextStep": "Next",
  "pages.GroupDetail.Info.DataStreams": "Data streams",
  "pages.GroupDetail.Info.Submit": "Submit",
  "pages.GroupDetail.Info.SubmittedSuccessfully": "Submitted successfully",
  "pages.GroupDetail.Info.CheckMsg": "Please check the form",
  "pages.GroupDetail.Info.Previous": "Previous",
  "pages.GroupDetail.Info.Create": "Create",
  "pages.GroupDetail.Sources.SaveSuccessfully": "Save successfully",
  "pages.GroupDetail.Sources.DeleteConfirm": "Delete confirm",
  "pages.GroupDetail.Sources.DeleteSuccessfully": "Delete successfully",
  "pages.GroupDetail.Sources.DataStreams": "DataStreams",
  "pages.GroupDetail.Sources.Create": "Create",
  "pages.GroupDetail.Sources.status.Disable": "Disable",
  "pages.GroupDetail.Sources.status.Normal": "Normal",
  "pages.GroupDetail.Sources.status.Failure": "Failure",
  "pages.GroupDetail.Sources.status.Frozen": "Frozen",
  "pages.GroupDetail.Sources.status.New": "New",
  "pages.GroupDetail.Sources.status.TobeAdd": "ToBeAdd",
  "pages.GroupDetail.Sources.status.TobeDelete": "ToBeDelete",
  "pages.GroupDetail.Sources.status.TobeRetry": "ToBeRetry",
  "pages.GroupDetail.Sources.status.TobeFrozen": "ToBeStop",
  "pages.GroupDetail.Sources.status.TobeActive": "ToBeRestart",
  "pages.GroupDetail.Sources.status.BeenAdd": "BeenAdd",
  "pages.GroupDetail.Sources.status.BeenDelete": "BeenDelete",
  "pages.GroupDetail.Sources.status.BeenRetry": "BeenRetry",
  "pages.GroupDetail.Sources.status.BeenFrozen": "BeenStop",
  "pages.GroupDetail.Sources.status.BeenActive": "BeenRestart",
  "pages.GroupDetail.Sink.New": "Create",
  "pages.GroupDetail.Sink.Type": "Type",
  "pages.GroupDetail.Sink.DataStreams": "DataStreams",
  "pages.GroupDetail.Sink.Status.New": "New",
  "pages.GroupDetail.Sink.Status.Pending": "Pending",
  "pages.GroupDetail.Sink.Status.Error": "Error",
  "pages.GroupDetail.Sink.Status.Success": "Success",
  "pages.GroupDetail.Sink.Cancel": "Cancel",
  "pages.GroupDetail.Sink.Save": "Save",
  "pages.GroupDetail.Sink.SaveAndRefresh": "Save and submit the process",
  "pages.GroupDetail.Stream.StreamConfigTitle": "Data stream configuration",
  "pages.GroupDetail.Stream.CreateDataStream": "Create",
  "pages.GroupDetail.PageTitle": "Detail",
  "pages.GroupDetail.Info": "Group Info",
  "pages.GroupDetail.Streams": "Streams",
  "pages.GroupDetail.Sources": "Sources",
  "pages.GroupDetail.Sinks": "Sinks",
  "pages.GroupDetail.Audit": "Audit",
  "pages.GroupDetail.Audit.DataStream": "DataStream",
  "pages.GroupDetail.Audit.Date": "Date",
  "pages.GroupDetail.Audit.AuditIds": "Contents",
  "pages.GroupDetail.Audit.Search": "Search",
  "pages.GroupDetail.Audit.Time": "Time",
  "pages.GroupDetail.Audit.Receive": "Receive",
  "pages.GroupDetail.Audit.Send": "Send",
  "pages.GroupDetail.Audit.TimeStaticsDim": "TimeStaticsDim",
  "pages.GroupDetail.Audit.Min": "Minute",
  "pages.GroupDetail.Audit.Hour": "Hour",
  "pages.GroupDetail.Audit.Day": "Day",
  "pages.ApprovalDetail.GroupConfig.DataStorages": "DataStorages",
  "pages.ApprovalDetail.GroupConfig.ApprovalInformation": "Approval information",
  "pages.ApprovalDetail.GroupConfig.DataFlowInformation": "Data stream information",
  "pages.ApprovalDetail.GroupConfig.BasicInformation": "Basic information",
  "pages.ApprovalDetail.GroupConfig.BindClusterTag": "Cluster tag",
  "pages.ApprovalDetail.ConsumeConfig.ConsumerGroup": "Consumer group",
  "pages.ApprovalDetail.ConsumeConfig.BasicInfo": "Basic information",
  "pages.ApprovalDetail.ConsumeConfig.ApprovalInfo": "Approval information",
  "pages.ApprovalDetail.SubmitApplication": "Submit application",
  "pages.ApprovalDetail.Process": "Process",
  "pages.ApprovalDetail.Ok": "Ok",
  "pages.ApprovalDetail.RevokeSuccess": "Revoke success",
  "pages.ApprovalDetail.ConfirmReject": "Confirm?",
  "pages.ApprovalDetail.Withdraw": "Withdraw",
  "pages.ApprovalDetail.Back": "Back",
  "pages.ApprovalDetail.ConfirmWithdrawal": "Confirm withdrawal?",
  "pages.ApprovalDetail.ApplicationTime": "Application time",
  "pages.ApprovalDetail.Requisition": "Requisition",
  "pages.ApprovalDetail.ApprovalComments": "Approval comments",
  "pages.ApprovalDetail.Reject": "Reject",
  "pages.ApprovalDetail.Applicant": "Applicant",
  "pages.ApprovalDetail.ApprovalProcess": "Approval",
  "pages.ApprovalDetail.WaitingForApproval": "Waiting for approval",
  "pages.ApprovalDetail.RejectSuccess": "Reject success",
  "pages.ApprovalDetail.Done": "Done",
  "pages.Approvals.status.HaveTerminated": "Have terminated",
  "pages.Approvals.status.Completed": "Completed",
  "pages.Approvals.status.Processing": "Processing",
  "pages.Approvals.status.Rejected": "Rejected",
  "pages.Approvals.status.Canceled": "Canceled",
  "pages.Approvals.status.Ok": "Approved",
  "pages.Approvals.ApplicationTime": "ApplicationTime",
  "pages.Approvals.ApplicationType": "ApplicationType",
  "pages.Approvals.Approver": "Approver",
  "pages.Approvals.Applicant": "Applicant",
  "pages.Approvals.ProcessID": "Process ID",
  "pages.Approvals.GroupId": "Inlong Group ID",
  "pages.Approvals.MyApplication": "My Application",
  "pages.Approvals.MyApproval": "My Approval",
  "pages.ConsumeCreate.ConsumerInformation": "Consumer information",
  "pages.ConsumeCreate.Prev": "Prev",
  "pages.ConsumeCreate.Next": "Next",
  "pages.ConsumeCreate.Submit": "Submit",
  "pages.ConsumeCreate.Back": "Back",
  "pages.ConsumeCreate.NewConsume": "NewConsume",
  "pages.ConsumeDashboard.config.BeAllocated": "Be allocated",
  "pages.ConsumeDashboard.config.ApplicationStatus": "Application status",
  "pages.ConsumeDashboard.config.Reject": "Reject",
  "pages.ConsumeDashboard.config.OperatingStatus": "Operating status",
  "pages.ConsumeDashboard.config.Total": "Total",
  "pages.ConsumeDashboard.config.Pending": "Pending",
  "pages.ConsumeDashboard.config.ConsumerGroup": "ConsumerGroup",
  "pages.ConsumeDashboard.config.ConsumeInlongGroupId": "Target Inlong Group ID",
  "pages.ConsumeDashboard.config.RecentConsumeTime": "Recent consume time",
  "pages.ConsumeDashboard.config.Middleware": "Message Queue",
  "pages.ConsumeDashboard.status.Normal": "Normal",
  "pages.ConsumeDashboard.status.Abnormal": "Abnormal",
  "pages.ConsumeDashboard.status.Shield": "Shield",
  "pages.ConsumeDashboard.status.NoStatus": "NoStatus",
  "pages.ConsumeDashboard.status.Passed": "Passed",
  "pages.ConsumeDashboard.status.Cancelled": "Cancelled",
  "pages.ConsumeDashboard.NewConsume": "Create",
  "pages.ConsumeDetail.Info.config.ConsumerGroupID": "Consumer group ID",
  "pages.ConsumeDetail.ConsumeDetails": "Consume Detail",
  "pages.Clusters.Type": "Type",
  "pages.Clusters.TypeAll": "All",
  "pages.Clusters.Create": "Create",
  "pages.Clusters.Edit": "Edit",
  "pages.Clusters.LastModifier": "LastModifier",
  "pages.Clusters.Name": "Cluster Name",
  "pages.Clusters.Tag": "Cluster Tag",
  "pages.Clusters.InCharges": "Owners",
  "pages.Clusters.Description": "Description",
  "pages.Clusters.Node.Name": "Node",
  "pages.Clusters.Node.Port": "Port",
  "pages.Clusters.Node.ProtocolType": "Protocol Type",
  "pages.Clusters.Node.LastModifier": "LastModifier",
  "pages.Clusters.Node.Create": "Create",
  "pages.Clusters.Node.IpRule": "Please enter the IP address correctly",
  "pages.Clusters.Node.PortRule": "Please enter the port address correctly",
  "pages.Clusters.Node.ProtocolTypeRule": "Please enter the protocol type correctly",
  "pages.Clusters.Pulsar.Tenant": "Default Tenant",
  "pages.Clusters.Kafka.ClusterUrl": "Cluster URL",
  "pages.Clusters.Pulsar.ServiceUrlHelper": "For producing and consuming data",
  "pages.Clusters.Pulsar.AdminUrlHelper": "Used to manage (e.g. create, modify) tenants, namespaces, topics and subscription groups",
  "pages.Clusters.Tube.MasterRpcUrlHelper": "Master RPC URL, used to produce and consume data",
  "pages.Clusters.Tube.MasterWebUrlHelper": "Master Web URL, used to manage (e.g. create, modify) topics and consumer groups",
  "pages.ClusterTags.Name": "ClusterTag",
  "pages.ClusterTags.InCharges": "Owners",
  "pages.ClusterTags.Description": "Description",
  "pages.ClusterTags.ModifyTime": "ModifyTime",
  "pages.ClusterTags.Modifier": "Modifier",
  "pages.ClusterTags.BindCluster": "BindCluster",
  "pages.ClusterTags.DelCluster": "Unbind",
  "pages.ClusterTags.DelClusterConfirm": "Are you sure you want to unbind?",
  "pages.ClusterTags.DelClusterSuccess": "Unbind successfully",
  "pages.ClusterTags.DelConfirm": "Deleting a cluster tag will unbind it from all clusters bound to this tag, and make sure this tag is not used by InlongGroup",
  "pages.ClusterTags.NameEditHelp": "Modifying a cluster tag will also modify the tag name in all clusters bound to this tag, and make sure that this label is not used by InlongGroup",
  "pages.Login.PleaseEnterUserName": "Please enter user name",
  "pages.Login.PasswordRules": "Only lowercase letters, numbers, minus, and underscores",
  "pages.Login.Login": "Login",
  "pages.Login.PleaseEnterYourPassword": "Please enter your password",
  "pages.UserManagement.DetailModal.Day": "Days",
  "pages.UserManagement.DetailModal.New": "New construction",
  "pages.UserManagement.DetailModal.UserPassword": "Password",
  "pages.UserManagement.DetailModal.EffectiveTime": "Effective time",
  "pages.UserManagement.DetailModal.SavedSuccessfully": "Saved successfully",
  "pages.UserManagement.config.Admin": "Admin",
  "pages.UserManagement.config.UserName": "Username",
  "pages.UserManagement.config.GeneralUser": "General user",
  "pages.UserManagement.config.Creator": "Creator name",
  "pages.UserManagement.config.CreateTime": "Create Time",
  "pages.UserManagement.config.AccountRole": "Account Role",
  "pages.UserManagement.status.Normal": "Normal",
  "pages.UserManagement.status.Fail": "Fail",
  "pages.UserManagement.CreateAccount": "Create",
  "pages.ApprovalManagement.ProcessName": "Process Name",
  "pages.ApprovalManagement.TaskName": "Task Name",
  "pages.ApprovalManagement.Approvers": "Approvers",
  "pages.ApprovalManagement.Creator": "Creator Name",
  "pages.ApprovalManagement.Modifier": "Modifier Name",
  "pages.ApprovalManagement.CreateProcess": "Create Process"
}
