<?xml version="1.0" encoding="UTF-8"?>
<!--
    Licensed to the Apache Software Foundation (ASF) under one
    or more contributor license agreements. See the NOTICE file
    distributed with this work for additional information
    regarding copyright ownership. The ASF licenses this file
    to you under the Apache License, Version 2.0 (the
    "License"); you may not use this file except in compliance
    with the License. You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied. See the License for the
    specific language governing permissions and limitations
    under the License.
-->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.apache.inlong.manager.dao.mapper.InlongClusterEntityMapper">
    <resultMap id="BaseResultMap" type="org.apache.inlong.manager.dao.entity.InlongClusterEntity">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="type" jdbcType="VARCHAR" property="type"/>
        <result column="url" jdbcType="VARCHAR" property="url"/>
        <result column="cluster_tags" jdbcType="VARCHAR" property="clusterTags"/>
        <result column="ext_tag" jdbcType="VARCHAR" property="extTag"/>
        <result column="token" jdbcType="VARCHAR" property="token"/>
        <result column="ext_params" jdbcType="LONGVARCHAR" property="extParams"/>
        <result column="description" jdbcType="VARCHAR" property="description"/>
        <result column="heartbeat" jdbcType="LONGVARCHAR" property="heartbeat"/>
        <result column="in_charges" jdbcType="VARCHAR" property="inCharges"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="is_deleted" jdbcType="INTEGER" property="isDeleted"/>
        <result column="creator" jdbcType="VARCHAR" property="creator"/>
        <result column="modifier" jdbcType="VARCHAR" property="modifier"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime"/>
        <result column="version" jdbcType="INTEGER" property="version"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, name, type, url, cluster_tags, ext_tag, token, ext_params, description, heartbeat,
        in_charges, status, is_deleted, creator, modifier, create_time, modify_time, version
    </sql>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id"
            parameterType="org.apache.inlong.manager.dao.entity.InlongClusterEntity">
        insert into inlong_cluster (id, name, type,
                                    url, cluster_tags, ext_tag,
                                    token, ext_params, description,
                                    heartbeat, in_charges,
                                    status, creator, modifier)
        values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR},
                #{url,jdbcType=VARCHAR}, #{clusterTags,jdbcType=VARCHAR}, #{extTag,jdbcType=VARCHAR},
                #{token,jdbcType=VARCHAR}, #{extParams,jdbcType=LONGVARCHAR}, #{description, jdbcType=VARCHAR},
                #{heartbeat,jdbcType=LONGVARCHAR}, #{inCharges,jdbcType=VARCHAR},
                #{status,jdbcType=INTEGER}, #{creator,jdbcType=VARCHAR}, #{modifier,jdbcType=VARCHAR})
    </insert>

    <insert id="insertOnDuplicateKeyUpdate" useGeneratedKeys="true" keyProperty="id"
            parameterType="org.apache.inlong.manager.dao.entity.InlongClusterEntity">
        insert into inlong_cluster (id, name, type,
                                    url, cluster_tags, ext_tag,
                                    token, ext_params, heartbeat,
                                    in_charges, status,
                                    creator, modifier)
        values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR},
                #{url,jdbcType=VARCHAR}, #{clusterTags,jdbcType=VARCHAR}, #{extTag,jdbcType=VARCHAR},
                #{token,jdbcType=VARCHAR}, #{extParams,jdbcType=LONGVARCHAR}, #{heartbeat,jdbcType=LONGVARCHAR},
                #{inCharges,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER},
                #{creator,jdbcType=VARCHAR}, #{modifier,jdbcType=VARCHAR})
        ON DUPLICATE KEY UPDATE cluster_tags = VALUES(cluster_tags),
                                ext_tag      = VALUES(ext_tag),
                                token        = VALUES(token),
                                ext_params   = VALUES(ext_params),
                                heartbeat    = VALUES(heartbeat),
                                in_charges   = VALUES(in_charges),
                                status       = VALUES(status),
                                modifier     = VALUES(modifier)
    </insert>

    <select id="selectById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from inlong_cluster
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="selectByKey" resultType="org.apache.inlong.manager.dao.entity.InlongClusterEntity">
        select
        <include refid="Base_Column_List"/>
        from inlong_cluster
        <where>
            is_deleted = 0
            <if test="type != null and type != ''">
                and type = #{type, jdbcType=VARCHAR}
            </if>
            <if test="clusterTag != null and clusterTag != ''">
                and find_in_set(#{clusterTag, jdbcType=VARCHAR}, cluster_tags)
            </if>
            <if test="name != null and name != ''">
                and name = #{name, jdbcType=VARCHAR}
            </if>
        </where>
        order by modify_time desc
    </select>
    <select id="selectByNameAndType" resultType="org.apache.inlong.manager.dao.entity.InlongClusterEntity">
        select
        <include refid="Base_Column_List"/>
        from inlong_cluster
        <where>
            is_deleted = 0
            <if test="type != null and type != ''">
                and type = #{type, jdbcType=VARCHAR}
            </if>
            <if test="name != null and name != ''">
                and name = #{name, jdbcType=VARCHAR}
            </if>
        </where>
        order by modify_time desc
    </select>
    <select id="selectByCondition"
            parameterType="org.apache.inlong.manager.pojo.cluster.ClusterPageRequest"
            resultType="org.apache.inlong.manager.dao.entity.InlongClusterEntity">
        select
        <include refid="Base_Column_List"/>
        from inlong_cluster
        <where>
            is_deleted = 0
            <if test="name != null and name != ''">
                and name = #{name, jdbcType=VARCHAR}
            </if>
            <if test="type != null and type != ''">
                and `type` = #{type, jdbcType=VARCHAR}
            </if>
            <if test="typeList != null and typeList.size() > 0">
                and `type` in
                <foreach item="item" index="index" collection="typeList" open="(" close=")" separator=",">
                    #{item}
                </foreach>
            </if>
            <if test="clusterTag != null and clusterTag != ''">
                and find_in_set(#{clusterTag, jdbcType=VARCHAR}, cluster_tags)
            </if>
            <if test="clusterTagList != null and clusterTagList.size() > 0">
                and
                <foreach item="item" index="index" collection="clusterTagList" open="(" close=")" separator="or">
                    find_in_set(#{item}, cluster_tags)
                </foreach>
            </if>
            <if test="extTag != null and extTag != ''">
                and ext_tag = #{extTag, jdbcType=VARCHAR}
            </if>
            <if test="keyword != null and keyword != ''">
                and (name like CONCAT('%', #{keyword}, '%')
                or cluster_tags like CONCAT('%', #{keyword}, '%')
                or ext_tag like CONCAT('%', #{keyword}, '%')
                )
            </if>
            <if test="status != null and status != ''">
                and status = #{status, jdbcType=INTEGER}
            </if>
        </where>
        order by modify_time desc
    </select>
    <select id="selectByClusterTag" resultType="org.apache.inlong.manager.dao.entity.InlongClusterEntity">
        select
        <include refid="Base_Column_List"/>
        from inlong_cluster
        <where>
            is_deleted = 0
            <if test="clusterTag != null and clusterTag != ''">
                and find_in_set(#{clusterTag, jdbcType=VARCHAR}, cluster_tags)
            </if>
        </where>
        order by modify_time desc
    </select>
    <select id="selectAllClusters" resultType="org.apache.inlong.manager.pojo.sort.standalone.SortSourceClusterInfo" >
        select name,
               type,
               url,
               cluster_tags,
               ext_tag,
               ext_params
        from inlong_cluster
        where is_deleted = 0
    </select>

    <update id="updateById" parameterType="org.apache.inlong.manager.dao.entity.InlongClusterEntity">
        update inlong_cluster
        set name         = #{name,jdbcType=VARCHAR},
            type         = #{type,jdbcType=VARCHAR},
            url          = #{url,jdbcType=VARCHAR},
            cluster_tags = #{clusterTags,jdbcType=VARCHAR},
            ext_tag      = #{extTag,jdbcType=VARCHAR},
            token        = #{token,jdbcType=VARCHAR},
            ext_params   = #{extParams,jdbcType=LONGVARCHAR},
            description  = #{description,jdbcType=VARCHAR},
            heartbeat    = #{heartbeat,jdbcType=LONGVARCHAR},
            in_charges   = #{inCharges,jdbcType=VARCHAR},
            status       = #{status,jdbcType=INTEGER},
            is_deleted   = #{isDeleted,jdbcType=INTEGER},
            modifier     = #{modifier,jdbcType=VARCHAR},
            version      = #{version,jdbcType=INTEGER} + 1
        where id = #{id,jdbcType=INTEGER}
          and version = #{version,jdbcType=INTEGER}
    </update>
    <update id="updateByIdSelective" parameterType="org.apache.inlong.manager.dao.entity.InlongClusterEntity">
        update inlong_cluster
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=VARCHAR},
            </if>
            <if test="url != null">
                url = #{url,jdbcType=VARCHAR},
            </if>
            <if test="clusterTags != null">
                cluster_tags = #{clusterTags,jdbcType=VARCHAR},
            </if>
            <if test="extTag != null">
                ext_tag = #{extTag,jdbcType=VARCHAR},
            </if>
            <if test="token != null">
                token = #{token,jdbcType=VARCHAR},
            </if>
            <if test="extParams != null">
                ext_params = #{extParams,jdbcType=LONGVARCHAR},
            </if>
            <if test="description != null">
                description = #{description,jdbcType=VARCHAR},
            </if>
            <if test="heartbeat != null">
                heartbeat = #{heartbeat,jdbcType=LONGVARCHAR},
            </if>
            <if test="inCharges != null">
                in_charges = #{inCharges,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER},
            </if>
            <if test="isDeleted != null">
                is_deleted = #{isDeleted,jdbcType=INTEGER},
            </if>
            <if test="modifier != null">
                modifier = #{modifier,jdbcType=VARCHAR},
            </if>
            version = #{version,jdbcType=INTEGER} + 1
        </set>
        where id = #{id,jdbcType=INTEGER}
        and version = #{version,jdbcType=INTEGER}
    </update>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from inlong_cluster
        where id = #{id,jdbcType=INTEGER}
    </delete>
</mapper>
