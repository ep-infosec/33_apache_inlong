<?xml version="1.0" encoding="UTF-8"?>
<!--
    Licensed to the Apache Software Foundation (ASF) under one
    or more contributor license agreements.  See the NOTICE file
    distributed with this work for additional information
    regarding copyright ownership.  The ASF licenses this file
    to you under the Apache License, Version 2.0 (the
    "License"); you may not use this file except in compliance
    with the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.apache</groupId>
        <artifactId>apache</artifactId>
        <version>23</version>
    </parent>

    <groupId>org.apache.inlong</groupId>
    <artifactId>inlong</artifactId>
    <version>1.5.0-SNAPSHOT</version>
    <packaging>pom</packaging>
    <name>Apache InLong</name>

    <description>InLong is a one-stop integration framework for massive data donated by Tencent to
        the Apache community.
        It provides automatic, safe, reliable, and high-performance data transmission capabilities
        to facilitate the construction of streaming-based data analysis, modeling, and applications.</description>

    <modules>
        <module>inlong-common</module>
        <module>inlong-sdk</module>
        <module>inlong-tubemq</module>
        <module>inlong-audit</module>
        <module>inlong-dataproxy</module>
        <module>inlong-agent</module>
        <module>inlong-sort</module>
        <module>inlong-sort-standalone</module>
        <module>inlong-manager</module>
        <module>inlong-dashboard</module>
        <module>inlong-distribution</module>
    </modules>

    <properties>
        <project.build.encoding>UTF-8</project.build.encoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <plugin.compile.version>3.8.1</plugin.compile.version>
        <plugin.assembly.version>3.2.0</plugin.assembly.version>
        <plugin.surefire.version>3.0.0-M7</plugin.surefire.version>
        <plugin.failsafe.version>3.0.0-M7</plugin.failsafe.version>
        <plugin.shade.version>3.2.4</plugin.shade.version>
        <plugin.maven.source>3.0.1</plugin.maven.source>
        <plugin.maven.jar.version>3.2.0</plugin.maven.jar.version>
        <exec.maven.version>1.6.0</exec.maven.version>
        <build.helper.maven.version>3.0.0</build.helper.maven.version>

        <spotless.version>2.27.2</spotless.version>
        <dockerfile.maven.version>1.4.13</dockerfile.maven.version>
        <testcontainers.version>1.17.2</testcontainers.version>
        <docker.organization>inlong</docker.organization>

        <netty.version>4.1.72.Final</netty.version>
        <scala.binary.version>2.11</scala.binary.version>
        <spark.version>2.4.4</spark.version>

        <simpleclient.httpserver.version>0.14.1</simpleclient.httpserver.version>
        <httpcore.version>4.4.14</httpcore.version>
        <httpclient.version>4.5.13</httpclient.version>
        <okhttp.version>3.14.9</okhttp.version>
        <retrofit.version>2.9.0</retrofit.version>
        <okhttp2.version>2.7.5</okhttp2.version>
        <okio.version>1.12.0</okio.version>
        <logging-interceptor.version>2.7.5</logging-interceptor.version>

        <spring.boot.version>2.6.6</spring.boot.version>
        <spring.version>5.3.20</spring.version>
        <spring.autoconfigure.version>2.4.3</spring.autoconfigure.version>
        <spring.plugin.version>2.6.6</spring.plugin.version>
        <spring.fox.version>3.0.0</spring.fox.version>
        <pagehelper.springboot.version>1.4.2</pagehelper.springboot.version>
        <pagehelper.version>5.3.1</pagehelper.version>

        <h2.version>2.1.214</h2.version>
        <h2.mysql.version>2.0.0</h2.mysql.version>
        <debezium.version>1.8.0.Final</debezium.version>
        <rocksdb.version>6.14.6</rocksdb.version>
        <redis-replicator.version>3.6.4</redis-replicator.version>
        <hadoop.version>2.10.2</hadoop.version>
        <postgresql.version>42.4.1</postgresql.version>
        <oracle.jdbc.version>19.3.0.0</oracle.jdbc.version>
        <mysql.jdbc.version>8.0.21</mysql.jdbc.version>
        <sqlserver.jdbc.version>7.2.2.jre8</sqlserver.jdbc.version>
        <mybatis.starter.version>2.1.3</mybatis.starter.version>
        <mybatis.version>3.5.9</mybatis.version>
        <druid.version>1.2.6</druid.version>
        <elasticsearch6.version>6.8.17</elasticsearch6.version>
        <elasticsearch7.version>7.9.2</elasticsearch7.version>
        <shiro.version>1.10.1</shiro.version>

        <snappy.version>1.1.8.4</snappy.version>
        <protobuf.version>3.19.4</protobuf.version>
        <bytebuddy.version>1.12.9</bytebuddy.version>
        <reflections.version>0.10.2</reflections.version>

        <swagger.version>3.0.0</swagger.version>
        <swagger.annotations.version>1.6.2</swagger.annotations.version>
        <knife4j.version>3.0.3</knife4j.version>

        <commons.io.version>2.11.0</commons.io.version>
        <commons.cli.version>1.4</commons.cli.version>
        <commons.dbutils.version>1.7</commons.dbutils.version>
        <commons.codec.version>1.15</commons.codec.version>
        <commons.lang3.version>3.11</commons.lang3.version>
        <commons.collections.version>3.2.2</commons.collections.version>
        <commons.collections4.version>4.3</commons.collections4.version>
        <commons-logging.version>1.2</commons-logging.version>

        <guava.version>31.0.1-jre</guava.version>
        <lombok.version>1.18.22</lombok.version>
        <jetty.version>9.4.48.v20220622</jetty.version>
        <opencsv.version>5.4</opencsv.version>
        <javax.servlet.api.version>4.0.1</javax.servlet.api.version>
        <gson.version>2.8.9</gson.version>
        <jackson.version>2.13.2</jackson.version>
        <jackson.databind.version>2.13.4.2</jackson.databind.version>
        <fastjson.version>1.2.83</fastjson.version>

        <clickhouse-jdbc.version>0.3.1</clickhouse-jdbc.version>
        <hive.version>3.1.3</hive.version>
        <thrift.version>0.9.3</thrift.version>
        <flume.version>1.9.0</flume.version>
        <hbase.version>2.4.12</hbase.version>

        <velocity.tools.generic.version>3.1</velocity.tools.generic.version>
        <velocity.engine.core.version>2.3</velocity.engine.core.version>

        <ini4j.version>0.5.4</ini4j.version>
        <dom4j.version>2.1.3</dom4j.version>

        <aws.sdk.version>1.12.346</aws.sdk.version>
        <zookeeper.version>3.6.3</zookeeper.version>
        <pulsar.version>2.8.1</pulsar.version>
        <pulsar.testcontainers.version>1.15.3</pulsar.testcontainers.version>
        <kafka.version>2.4.1</kafka.version>
        <iceberg.version>0.13.2</iceberg.version>
        <hudi.version>0.12.1</hudi.version>
        <flink.version>1.13.5</flink.version>
        <flink.minor.version>1.13</flink.minor.version>
        <flink.connector.mysql.cdc.version>2.2.1</flink.connector.mysql.cdc.version>
        <flink.scala.binary.version>2.11</flink.scala.binary.version>
        <flink.jackson.version>2.12.1-13.0</flink.jackson.version>
        <flink.connector.postgres.cdc.version>2.2.1</flink.connector.postgres.cdc.version>
        <flink.connector.sqlserver.cdc.version>2.2.1</flink.connector.sqlserver.cdc.version>
        <flink.pulsar.version>1.13.6.2</flink.pulsar.version>
        <flink.protobuf.version>2.7.6</flink.protobuf.version>
        <flink.connector.mongodb.cdc.version>2.2.1</flink.connector.mongodb.cdc.version>
        <flink.connector.oracle.cdc.version>2.2.1</flink.connector.oracle.cdc.version>
        <flink.connector.doris.version>1.0.3</flink.connector.doris.version>
        <flink.connector.redis>1.1.0</flink.connector.redis>
        <qcloud.flink.cos.fs.hadoop.version>1.10.0-0.1.10</qcloud.flink.cos.fs.hadoop.version>
        <qcloud.chdfs.version>2.5</qcloud.chdfs.version>

        <curator.version>2.12.0</curator.version>

        <avro.version>1.10.1</avro.version>
        <orc.core.version>1.6.7</orc.core.version>
        <parquet.version>1.12.2</parquet.version>
        <oro.version>2.0.8</oro.version>
        <akka.version>2.5.21</akka.version>
        <antlr.verison>4.0.4</antlr.verison>

        <logback.version>1.2.10</logback.version>
        <log4j2.version>2.17.2</log4j2.version>
        <slf4j.version>1.7.36</slf4j.version>

        <junit.version>4.13.2</junit.version>
        <jupiter.version>5.8.2</jupiter.version>
        <awaitility.version>4.0.3</awaitility.version>
        <mockito.version>3.12.4</mockito.version>
        <powermock.version>2.0.9</powermock.version>
        <assertj.version>3.4.1</assertj.version>
        <wiremock.version>2.33.2</wiremock.version>

        <jakarta.version>2.0.2</jakarta.version>
        <hamcrest.version>1.3</hamcrest.version>
        <jsr.version>3.0.2</jsr.version>
        <jcommander.version>1.78</jcommander.version>
        <je.version>7.3.7</je.version>
        <tencentcloud.cls.version>1.0.9</tencentcloud.cls.version>
        <tencentcloud.api.version>3.1.545</tencentcloud.api.version>
        <cos.hadoop.version>2.7.5-5.9.3</cos.hadoop.version>
        <cos.bundle.version>5.6.35</cos.bundle.version>
        <dlc.client.version>1.1.1</dlc.client.version>
        <dlc.jdbc.version>2.2.6</dlc.jdbc.version>
        <cos.lakefs.plugin.version>1.0</cos.lakefs.plugin.version>
        <esri-geometry-api.version>2.0.0</esri-geometry-api.version>
        <HikariCP.version>4.0.3</HikariCP.version>
        <caffeine.version>2.9.3</caffeine.version>
        <kafka.clients.version>3.0.0</kafka.clients.version>
        <paho.client.version>1.2.5</paho.client.version>

        <kubernetes.client.version>6.0.0</kubernetes.client.version>
        <protobuf.maven.plugin.version>0.6.1</protobuf.maven.plugin.version>
        <os.maven.plugin.version>1.6.0</os.maven.plugin.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- flume dependency -->
            <dependency>
                <groupId>org.apache.flume</groupId>
                <artifactId>flume-ng-core</artifactId>
                <version>${flume.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.flume</groupId>
                <artifactId>flume-ng-node</artifactId>
                <version>${flume.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.flume</groupId>
                <artifactId>flume-ng-sdk</artifactId>
                <version>${flume.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.flume</groupId>
                <artifactId>flume-ng-configuration</artifactId>
                <version>${flume.version}</version>
            </dependency>
            <dependency>
                <groupId>com.zaxxer</groupId>
                <artifactId>HikariCP</artifactId>
                <version>${HikariCP.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>slf4j-api</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.flume.flume-ng-sinks</groupId>
                <artifactId>flume-hdfs-sink</artifactId>
                <version>${flume.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>com.google.guava</groupId>
                        <artifactId>guava</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>commons-io</groupId>
                        <artifactId>commons-io</artifactId>
                    </exclusion>
                    <exclusion>
                        <!-- spotbugs-annotations is LGPL license and needs to be excluded -->
                        <groupId>com.github.spotbugs</groupId>
                        <artifactId>spotbugs-annotations</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>com.ververica</groupId>
                <artifactId>flink-connector-mongodb-cdc</artifactId>
                <version>${flink.connector.mongodb.cdc.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.bahir</groupId>
                <artifactId>flink-connector-redis_${flink.scala.binary.version}</artifactId>
                <version>${flink.connector.redis}</version>
            </dependency>

            <!-- hive -->
            <dependency>
                <groupId>org.apache.hive</groupId>
                <artifactId>hive-jdbc</artifactId>
                <version>${hive.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>xml-apis</groupId>
                        <artifactId>xml-apis</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.apache.logging.log4j</groupId>
                        <artifactId>log4j-web</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.apache.logging.log4j</groupId>
                        <artifactId>log4j-core</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.apache.logging.log4j</groupId>
                        <artifactId>log4j-slf4j-impl</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.apache.hbase</groupId>
                        <artifactId>*</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.hive</groupId>
                <artifactId>hive-metastore</artifactId>
                <version>${hive.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.apache.logging.log4j</groupId>
                        <artifactId>log4j-slf4j-impl</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.apache.parquet</groupId>
                        <artifactId>parquet-hadoop-bundle</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.apache.hbase</groupId>
                        <artifactId>*</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.hive</groupId>
                <artifactId>hive-exec</artifactId>
                <version>${hive.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.pentaho</groupId>
                        <artifactId>pentaho-aggdesigner-algorithm</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.apache.zookeeper</groupId>
                        <artifactId>zookeeper</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>commons-codec</groupId>
                        <artifactId>commons-codec</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.apache.commons</groupId>
                        <artifactId>commons-compress</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.apache.logging.log4j</groupId>
                        <artifactId>log4j-slf4j-impl</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.apache.hbase</groupId>
                        <artifactId>*</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.apache.calcite</groupId>
                        <artifactId>calcite-core</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.apache.calcite</groupId>
                        <artifactId>calcite-druid</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.apache.avro</groupId>
                        <artifactId>*</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.thrift</groupId>
                <artifactId>libfb303</artifactId>
                <version>${thrift.version}</version>
            </dependency>

            <!-- hadoop -->
            <dependency>
                <groupId>org.apache.hadoop</groupId>
                <artifactId>hadoop-common</artifactId>
                <version>${hadoop.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>com.sun.jersey</groupId>
                        <artifactId>jersey-json</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.xerial.snappy</groupId>
                        <artifactId>snappy-java</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>commons-logging</groupId>
                        <artifactId>commons-logging</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>commons-io</groupId>
                        <artifactId>commons-io</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>commons-lang</groupId>
                        <artifactId>commons-lang</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.apache.zookeeper</groupId>
                        <artifactId>zookeeper</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>slf4j-reload4j</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.hadoop</groupId>
                <artifactId>hadoop-minicluster</artifactId>
                <version>${hadoop.version}</version>
                <scope>test</scope>
                <exclusions>
                    <exclusion>
                        <groupId>xml-apis</groupId>
                        <artifactId>xml-apis</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.apache.avro</groupId>
                        <artifactId>avro</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.hadoop</groupId>
                <artifactId>hadoop-hdfs</artifactId>
                <version>${hadoop.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>com.google.guava</groupId>
                        <artifactId>guava</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.apache.logging.log4j</groupId>
                        <artifactId>log4j-api</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.apache.logging.log4j</groupId>
                        <artifactId>log4j-core</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.apache.logging.log4j</groupId>
                        <artifactId>log4j-slf4j-impl</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>com.google.protobuf</groupId>
                        <artifactId>protobuf-java</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.hadoop</groupId>
                <artifactId>hadoop-mapreduce-client-core</artifactId>
                <version>${hadoop.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>slf4j-reload4j</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <!-- clickhouse -->
            <dependency>
                <groupId>ru.yandex.clickhouse</groupId>
                <artifactId>clickhouse-jdbc</artifactId>
                <version>${clickhouse-jdbc.version}</version>
            </dependency>

            <!-- hbase -->
            <dependency>
                <groupId>org.apache.hbase</groupId>
                <artifactId>hbase-client</artifactId>
                <version>${hbase.version}</version>
            </dependency>

            <!-- db -->
            <dependency>
                <groupId>org.apache.shiro</groupId>
                <artifactId>shiro-spring</artifactId>
                <version>${shiro.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.shiro</groupId>
                <artifactId>shiro-core</artifactId>
                <version>${shiro.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mybatis.spring.boot</groupId>
                <artifactId>mybatis-spring-boot-starter</artifactId>
                <version>${mybatis.starter.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mybatis</groupId>
                <artifactId>mybatis</artifactId>
                <version>${mybatis.version}</version>
            </dependency>
            <dependency>
                <groupId>org.postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <version>${postgresql.version}</version>
            </dependency>
            <dependency>
                <groupId>com.microsoft.sqlserver</groupId>
                <artifactId>mssql-jdbc</artifactId>
                <version>${sqlserver.jdbc.version}</version>
            </dependency>
            <!--ojdbc8 is FUTC license, we use it test only-->
            <dependency>
                <groupId>com.oracle.database.jdbc</groupId>
                <artifactId>ojdbc8</artifactId>
                <version>${oracle.jdbc.version}</version>
                <scope>provided</scope>
            </dependency>
            <!-- mysql-connector-java is LGPL license, we use it test only -->
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql.jdbc.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid-spring-boot-starter</artifactId>
                <version>${druid.version}</version>
            </dependency>
            <dependency>
                <groupId>org.rocksdb</groupId>
                <artifactId>rocksdbjni</artifactId>
                <version>${rocksdb.version}</version>
            </dependency>
            <dependency>
                <groupId>io.debezium</groupId>
                <artifactId>debezium-api</artifactId>
                <version>${debezium.version}</version>
            </dependency>
            <dependency>
                <groupId>io.debezium</groupId>
                <artifactId>debezium-embedded</artifactId>
                <version>${debezium.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>slf4j-log4j12</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>io.debezium</groupId>
                <artifactId>debezium-connector-mysql</artifactId>
                <version>${debezium.version}</version>
            </dependency>

            <dependency>
                <groupId>io.debezium</groupId>
                <artifactId>debezium-connector-sqlserver</artifactId>
                <version>${debezium.version}</version>
            </dependency>

            <dependency>
                <groupId>io.debezium</groupId>
                <artifactId>debezium-connector-mongodb</artifactId>
                <version>${debezium.version}</version>
            </dependency>

            <dependency>
                <groupId>io.debezium</groupId>
                <artifactId>debezium-connector-postgres</artifactId>
                <version>${debezium.version}</version>
            </dependency>

            <dependency>
                <groupId>io.debezium</groupId>
                <artifactId>debezium-connector-oracle</artifactId>
                <version>${debezium.version}</version>
            </dependency>

            <dependency>
                <groupId>com.h2database</groupId>
                <artifactId>h2</artifactId>
                <version>${h2.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mvnsearch</groupId>
                <artifactId>h2-functions-4-mysql</artifactId>
                <version>${h2.mysql.version}</version>
            </dependency>
            <dependency>
                <groupId>com.moilioncircle</groupId>
                <artifactId>redis-replicator</artifactId>
                <version>${redis-replicator.version}</version>
            </dependency>

            <!--spring -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-jdbc</artifactId>
                <version>${spring.boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter</artifactId>
                <version>${spring.boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-web</artifactId>
                <version>${spring.boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-data-rest</artifactId>
                <version>${spring.boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-aop</artifactId>
                <version>${spring.boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-validation</artifactId>
                <version>${spring.boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-data-jpa</artifactId>
                <version>${spring.boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-log4j2</artifactId>
                <version>${spring.boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-test</artifactId>
                <version>${spring.boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-autoconfigure</artifactId>
                <version>${spring.boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-cache</artifactId>
                <version>${spring.boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-configuration-processor</artifactId>
                <version>${spring.boot.version}</version>
                <optional>true</optional>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-web</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-core</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-jdbc</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-orm</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-beans</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-context</artifactId>
                <version>${spring.version}</version>
            </dependency>

            <!-- spring fox -->
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-boot-starter</artifactId>
                <version>${spring.fox.version}</version>
            </dependency>
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger-ui</artifactId>
                <version>${spring.fox.version}</version>
            </dependency>
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-spring-web</artifactId>
                <version>${spring.fox.version}</version>
            </dependency>

            <!-- swagger -->
            <dependency>
                <groupId>io.swagger</groupId>
                <artifactId>swagger-annotations</artifactId>
                <version>${swagger.annotations.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.xiaoymin</groupId>
                <artifactId>knife4j-spring-boot-starter</artifactId>
                <version>${knife4j.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.apache.logging.log4j</groupId>
                        <artifactId>log4j-to-slf4j</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.apache.logging.log4j</groupId>
                        <artifactId>log4j-api</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <!-- pagehelper -->
            <dependency>
                <groupId>com.github.pagehelper</groupId>
                <artifactId>pagehelper</artifactId>
                <version>${pagehelper.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.pagehelper</groupId>
                <artifactId>pagehelper-spring-boot-starter</artifactId>
                <version>${pagehelper.springboot.version}</version>
            </dependency>

            <!--netty dependency-->
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-transport</artifactId>
                <version>${netty.version}</version>
            </dependency>
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-handler</artifactId>
                <version>${netty.version}</version>
            </dependency>
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-common</artifactId>
                <version>${netty.version}</version>
            </dependency>
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-buffer</artifactId>
                <version>${netty.version}</version>
            </dependency>
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-codec</artifactId>
                <version>${netty.version}</version>
            </dependency>
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-transport-native-epoll</artifactId>
                <version>${netty.version}</version>
            </dependency>
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>javax.servlet-api</artifactId>
                <version>${javax.servlet.api.version}</version>
            </dependency>

            <!-- jetty -->
            <dependency>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-server</artifactId>
                <version>${jetty.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-servlet</artifactId>
                <version>${jetty.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-util</artifactId>
                <version>${jetty.version}</version>
            </dependency>

            <dependency>
                <groupId>com.opencsv</groupId>
                <artifactId>opencsv</artifactId>
                <version>${opencsv.version}</version>
            </dependency>
            <!-- http -->
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpcore</artifactId>
                <version>${httpcore.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpclient</artifactId>
                <version>${httpclient.version}</version>
            </dependency>
            <dependency>
                <groupId>com.squareup.okhttp3</groupId>
                <artifactId>okhttp</artifactId>
                <version>${okhttp.version}</version>
            </dependency>
            <dependency>
                <groupId>com.squareup.retrofit2</groupId>
                <artifactId>converter-jackson</artifactId>
                <version>${retrofit.version}</version>
            </dependency>
            <dependency>
                <groupId>com.squareup.okhttp</groupId>
                <artifactId>okhttp</artifactId>
                <version>${okhttp2.version}</version>
            </dependency>
            <dependency>
                <groupId>com.squareup.okio</groupId>
                <artifactId>okio</artifactId>
                <version>${okio.version}</version>
            </dependency>
            <dependency>
                <groupId>com.squareup.okhttp</groupId>
                <artifactId>logging-interceptor</artifactId>
                <version>${logging-interceptor.version}</version>
            </dependency>

            <!-- elastic search -->
            <dependency>
                <groupId>org.elasticsearch.client</groupId>
                <artifactId>elasticsearch-rest-high-level-client</artifactId>
                <version>${elasticsearch6.version}</version>
            </dependency>
            <dependency>
                <groupId>org.elasticsearch.client</groupId>
                <artifactId>elasticsearch-rest-client</artifactId>
                <version>${elasticsearch6.version}</version>
            </dependency>
            <dependency>
                <groupId>org.elasticsearch</groupId>
                <artifactId>elasticsearch</artifactId>
                <version>${elasticsearch6.version}</version>
            </dependency>
            <dependency>
                <groupId>org.elasticsearch.client</groupId>
                <artifactId>elasticsearch-rest-client-sniffer</artifactId>
                <version>${elasticsearch6.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.spark</groupId>
                <artifactId>spark-core_${scala.binary.version}</artifactId>
                <version>${spark.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.spark</groupId>
                <artifactId>spark-streaming_${scala.binary.version}</artifactId>
                <version>${spark.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.spark</groupId>
                <artifactId>spark-sql_${scala.binary.version}</artifactId>
                <version>${spark.version}</version>
            </dependency>

            <!--pulsar dependency-->
            <dependency>
                <groupId>org.apache.pulsar</groupId>
                <artifactId>pulsar-client</artifactId>
                <version>${pulsar.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.pulsar</groupId>
                <artifactId>pulsar-client-admin</artifactId>
                <version>${pulsar.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.pulsar</groupId>
                <artifactId>pulsar-client-all</artifactId>
                <version>${pulsar.version}</version>
            </dependency>
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>pulsar</artifactId>
                <version>${pulsar.testcontainers.version}</version>
                <scope>test</scope>
            </dependency>

            <!-- kafka dependency-->
            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>kafka-clients</artifactId>
                <version>${kafka.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>kafka_${scala.binary.version}</artifactId>
                <version>${kafka.version}</version>
            </dependency>

            <!-- flink -->
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-clients_${flink.scala.binary.version}</artifactId>
                <version>${flink.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-core</artifactId>
                <version>${flink.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-streaming-java_${flink.scala.binary.version}</artifactId>
                <version>${flink.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-table-common</artifactId>
                <version>${flink.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-table-runtime-blink_${flink.scala.binary.version}</artifactId>
                <version>${flink.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-parquet_${flink.scala.binary.version}</artifactId>
                <version>${flink.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-connector-kafka_${flink.scala.binary.version}</artifactId>
                <version>${flink.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-connector-hive_${flink.scala.binary.version}</artifactId>
                <version>${flink.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-connector-hbase-2.2_${flink.scala.binary.version}</artifactId>
                <version>${flink.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-table-api-java-bridge_${flink.scala.binary.version}</artifactId>
                <version>${flink.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-json</artifactId>
                <version>${flink.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-avro</artifactId>
                <version>${flink.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-csv</artifactId>
                <version>${flink.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-orc_${scala.binary.version}</artifactId>
                <version>${flink.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-sql-avro</artifactId>
                <version>${flink.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-sql-parquet_${scala.binary.version}</artifactId>
                <version>${flink.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-sql-orc_${scala.binary.version}</artifactId>
                <version>${flink.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-shaded-jackson</artifactId>
                <version>${flink.jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-test-utils_${flink.scala.binary.version}</artifactId>
                <version>${flink.version}</version>
                <scope>test</scope>
                <exclusions>
                    <exclusion>
                        <groupId>org.apache.logging.log4j</groupId>
                        <artifactId>log4j-slf4j-impl</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.apache.logging.log4j</groupId>
                        <artifactId>log4j-core</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.iceberg</groupId>
                <artifactId>iceberg-flink-runtime-1.13</artifactId>
                <version>${iceberg.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-table-planner-blink_${flink.scala.binary.version}</artifactId>
                <version>${flink.version}</version>
            </dependency>

            <dependency>
                <groupId>com.ververica</groupId>
                <artifactId>flink-connector-mysql-cdc</artifactId>
                <version>${flink.connector.mysql.cdc.version}</version>
                <!-- mysql-connector-java is LGPL license and needs to be excluded -->
                <exclusions>
                    <exclusion>
                        <groupId>mysql</groupId>
                        <artifactId>mysql-connector-java</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>com.ververica</groupId>
                <artifactId>flink-connector-postgres-cdc</artifactId>
                <version>${flink.connector.postgres.cdc.version}</version>
            </dependency>

            <dependency>
                <groupId>com.ververica</groupId>
                <artifactId>flink-connector-oracle-cdc</artifactId>
                <version>${flink.connector.oracle.cdc.version}</version>
                <!-- ojdbc8 is FUTC license and needs to be excluded -->
                <exclusions>
                    <exclusion>
                        <groupId>com.oracle.ojdbc</groupId>
                        <artifactId>ojdbc8</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>com.ververica</groupId>
                <artifactId>flink-connector-sqlserver-cdc</artifactId>
                <version>${flink.connector.sqlserver.cdc.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-connector-jdbc_${flink.scala.binary.version}</artifactId>
                <version>${flink.version}</version>
            </dependency>

            <dependency>
                <groupId>com.amazonaws</groupId>
                <artifactId>aws-java-sdk-s3</artifactId>
                <version>${aws.sdk.version}</version>
            </dependency>

            <dependency>
                <groupId>io.streamnative.connectors</groupId>
                <artifactId>pulsar-flink-connector_${scala.binary.version}</artifactId>
                <version>${flink.pulsar.version}</version>
            </dependency>
            <dependency>
                <groupId>io.streamnative.connectors</groupId>
                <artifactId>pulsar-flink-connector-origin</artifactId>
                <version>${flink.pulsar.version}</version>
            </dependency>
            <dependency>
                <groupId>io.streamnative.connectors</groupId>
                <artifactId>flink-protobuf</artifactId>
                <version>${flink.protobuf.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-test-utils-junit</artifactId>
                <version>${flink.version}</version>
                <scope>test</scope>
            </dependency>

            <!-- iceberg -->
            <dependency>
                <groupId>org.apache.iceberg</groupId>
                <artifactId>iceberg-api</artifactId>
                <version>${iceberg.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.iceberg</groupId>
                <artifactId>iceberg-hive-metastore</artifactId>
                <version>${iceberg.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.iceberg</groupId>
                <artifactId>iceberg-core</artifactId>
                <version>${iceberg.version}</version>
            </dependency>

            <!-- hudi -->
            <dependency>
                <groupId>org.apache.hudi</groupId>
                <artifactId>hudi-flink1.13-bundle</artifactId>
                <version>${hudi.version}</version>
            </dependency>

            <!-- qcloud -->
            <dependency>
                <groupId>com.qcloud</groupId>
                <artifactId>chdfs_hadoop_plugin_network</artifactId>
                <version>${qcloud.chdfs.version}</version>
            </dependency>
            <dependency>
                <groupId>com.qcloud.cos</groupId>
                <artifactId>flink-cos-fs-hadoop</artifactId>
                <version>${qcloud.flink.cos.fs.hadoop.version}</version>
            </dependency>

            <!-- lombok -->
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
            </dependency>

            <!-- google -->
            <dependency>
                <groupId>com.google.code.gson</groupId>
                <artifactId>gson</artifactId>
                <version>${gson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>

            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${fastjson.version}</version>
            </dependency>

            <!-- snappy -->
            <dependency>
                <groupId>org.xerial.snappy</groupId>
                <artifactId>snappy-java</artifactId>
                <version>${snappy.version}</version>
            </dependency>

            <!-- format -->
            <dependency>
                <groupId>org.apache.avro</groupId>
                <artifactId>avro</artifactId>
                <version>${avro.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.avro</groupId>
                <artifactId>avro-ipc</artifactId>
                <version>${avro.version}</version>
            </dependency>
            <dependency>
                <groupId>oro</groupId>
                <artifactId>oro</artifactId>
                <version>${oro.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.orc</groupId>
                <artifactId>orc-core</artifactId>
                <version>${orc.core.version}</version>
                <classifier>nohive</classifier>
            </dependency>
            <dependency>
                <groupId>org.apache.parquet</groupId>
                <artifactId>parquet-hadoop</artifactId>
                <version>${parquet.version}</version>
            </dependency>
            <dependency>
                <groupId>com.typesafe.akka</groupId>
                <artifactId>akka-stream_2.11</artifactId>
                <version>${akka.version}</version>
            </dependency>
            <dependency>
                <groupId>org.antlr</groupId>
                <artifactId>ST4</artifactId>
                <version>${antlr.verison}</version>
            </dependency>

            <!-- protobuf -->
            <dependency>
                <groupId>com.google.protobuf</groupId>
                <artifactId>protobuf-java</artifactId>
                <version>${protobuf.version}</version>
            </dependency>
            <dependency>
                <groupId>net.bytebuddy</groupId>
                <artifactId>byte-buddy</artifactId>
                <version>${bytebuddy.version}</version>
            </dependency>

            <!-- jackson -->
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${jackson.databind.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-annotations</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-core</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.datatype</groupId>
                <artifactId>jackson-datatype-jsr310</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.dataformat</groupId>
                <artifactId>jackson-dataformat-yaml</artifactId>
                <version>${jackson.version}</version>
            </dependency>

            <!-- zookeeper -->
            <dependency>
                <groupId>org.apache.zookeeper</groupId>
                <artifactId>zookeeper</artifactId>
                <version>${zookeeper.version}</version>
                <exclusions>
                    <!-- jsr305 and spotbugs-annotations are LGPL license and needs to be excluded -->
                    <exclusion>
                        <groupId>com.google.code.findbugs</groupId>
                        <artifactId>jsr305</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>com.github.spotbugs</groupId>
                        <artifactId>spotbugs-annotations</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.curator</groupId>
                <artifactId>curator-framework</artifactId>
                <version>${curator.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.curator</groupId>
                <artifactId>curator-recipes</artifactId>
                <version>${curator.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.curator</groupId>
                <artifactId>curator-test</artifactId>
                <version>${curator.version}</version>
                <scope>test</scope>
            </dependency>

            <!-- reflections -->
            <dependency>
                <groupId>org.reflections</groupId>
                <artifactId>reflections</artifactId>
                <version>${reflections.version}</version>
            </dependency>

            <!-- common / lang-->
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${commons.lang3.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-dbutils</groupId>
                <artifactId>commons-dbutils</artifactId>
                <version>${commons.dbutils.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-cli</groupId>
                <artifactId>commons-cli</artifactId>
                <version>${commons.cli.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${commons.io.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-codec</groupId>
                <artifactId>commons-codec</artifactId>
                <version>${commons.codec.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-collections</groupId>
                <artifactId>commons-collections</artifactId>
                <version>${commons.collections.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-collections4</artifactId>
                <version>${commons.collections4.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-logging</groupId>
                <artifactId>commons-logging</artifactId>
                <version>${commons-logging.version}</version>
            </dependency>
            <!-- metric -->
            <dependency>
                <groupId>io.prometheus</groupId>
                <artifactId>simpleclient_httpserver</artifactId>
                <version>${simpleclient.httpserver.version}</version>
            </dependency>
            <dependency>
                <groupId>io.prometheus</groupId>
                <artifactId>simpleclient</artifactId>
                <version>${simpleclient.httpserver.version}</version>
            </dependency>
            <dependency>
                <groupId>io.prometheus</groupId>
                <artifactId>simpleclient_hotspot</artifactId>
                <version>${simpleclient.httpserver.version}</version>
            </dependency>
            <dependency>
                <groupId>com.sleepycat</groupId>
                <artifactId>je</artifactId>
                <version>${je.version}</version>
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>org.apache.velocity.tools</groupId>
                <artifactId>velocity-tools-generic</artifactId>
                <version>${velocity.tools.generic.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.velocity</groupId>
                <artifactId>velocity-engine-core</artifactId>
                <version>${velocity.engine.core.version}</version>
            </dependency>

            <dependency>
                <groupId>org.ini4j</groupId>
                <artifactId>ini4j</artifactId>
                <version>${ini4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.dom4j</groupId>
                <artifactId>dom4j</artifactId>
                <version>${dom4j.version}</version>
            </dependency>

            <!-- log 4j2 -->
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-api</artifactId>
                <version>${log4j2.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-core</artifactId>
                <version>${log4j2.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-slf4j-impl</artifactId>
                <version>${log4j2.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-1.2-api</artifactId>
                <version>${log4j2.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-jcl</artifactId>
                <version>${log4j2.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-log4j12</artifactId>
                <version>${slf4j.version}</version>
                <scope>provided</scope>
            </dependency>
            <!-- logback -->
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>${logback.version}</version>
            </dependency>
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-core</artifactId>
                <version>${logback.version}</version>
            </dependency>
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-access</artifactId>
                <version>${logback.version}</version>
            </dependency>

            <!-- test -->
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter</artifactId>
                <version>${jupiter.version}</version>
            </dependency>

            <dependency>
                <groupId>com.github.tomakehurst</groupId>
                <artifactId>wiremock-jre8</artifactId>
                <version>${wiremock.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.powermock</groupId>
                <artifactId>powermock-module-junit4</artifactId>
                <version>${powermock.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.powermock</groupId>
                <artifactId>powermock-module-testng</artifactId>
                <version>${powermock.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.powermock</groupId>
                <artifactId>powermock-api-mockito2</artifactId>
                <version>${powermock.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-core</artifactId>
                <version>${mockito.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.assertj</groupId>
                <artifactId>assertj-core</artifactId>
                <version>${assertj.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.awaitility</groupId>
                <artifactId>awaitility</artifactId>
                <version>${awaitility.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>testcontainers</artifactId>
                <version>${testcontainers.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>mysql</artifactId>
                <version>${testcontainers.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>jdbc</artifactId>
                <version>${testcontainers.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>kafka</artifactId>
                <version>${testcontainers.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.hamcrest</groupId>
                <artifactId>hamcrest-all</artifactId>
                <version>${hamcrest.version}</version>
                <type>jar</type>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>jakarta.validation</groupId>
                <artifactId>jakarta.validation-api</artifactId>
                <version>${jakarta.version}</version>
            </dependency>

            <!-- jsr -->
            <dependency>
                <groupId>com.google.code.findbugs</groupId>
                <artifactId>jsr305</artifactId>
                <version>${jsr.version}</version>
            </dependency>
            <dependency>
                <groupId>com.beust</groupId>
                <artifactId>jcommander</artifactId>
                <version>${jcommander.version}</version>
            </dependency>
            <dependency>
                <groupId>com.esri.geometry</groupId>
                <artifactId>esri-geometry-api</artifactId>
                <version>${esri-geometry-api.version}</version>
            </dependency>
            <dependency>
                <groupId>com.tencentcloudapi.cls</groupId>
                <artifactId>tencentcloud-cls-sdk-java</artifactId>
                <version>${tencentcloud.cls.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>com.google.protobuf</groupId>
                        <artifactId>protobuf-java</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>com.tencentcloudapi</groupId>
                <artifactId>tencentcloud-sdk-java</artifactId>
                <version>${tencentcloud.api.version}</version>
            </dependency>
            <dependency>
                <groupId>com.qcloud.cos</groupId>
                <artifactId>hadoop-cos</artifactId>
                <version>${cos.hadoop.version}</version>
            </dependency>
            <dependency>
                <groupId>com.qcloud</groupId>
                <artifactId>cos_api-bundle</artifactId>
                <version>${cos.bundle.version}</version>
            </dependency>
            <dependency>
                <groupId>com.qcloud</groupId>
                <artifactId>dlc-data-catalog-metastore-client</artifactId>
                <version>${dlc.client.version}</version>
            </dependency>
            <dependency>
                <groupId>com.qcloud.cos</groupId>
                <artifactId>lakefs-cloud-plugin</artifactId>
                <version>${cos.lakefs.plugin.version}</version>
            </dependency>
            <dependency>
                <groupId>com.qcloud</groupId>
                <artifactId>dlc-jdbc</artifactId>
                <version>${dlc.jdbc.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.ben-manes.caffeine</groupId>
                <artifactId>caffeine</artifactId>
                <version>${caffeine.version}</version>
            </dependency>
            <dependency>
                <groupId>io.fabric8</groupId>
                <artifactId>kubernetes-client</artifactId>
                <version>${kubernetes.client.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${plugin.compile.version}</version>
                    <configuration>
                        <encoding>${project.build.encoding}</encoding>
                        <source>${maven.compiler.source}</source>
                        <target>${maven.compiler.target}</target>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>${plugin.maven.source}</version>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>com.diffplug.spotless</groupId>
                <artifactId>spotless-maven-plugin</artifactId>
                <version>${spotless.version}</version>
                <configuration>
                    <java>
                        <eclipse>
                            <file>codestyle/spotless_inlong_formatter.xml</file>
                        </eclipse>
                        <removeUnusedImports />
                        <replaceRegex>
                            <name>Remove wildcard imports</name>
                            <searchRegex>import\s+[^\*\s]+\*;(\r\n|\r|\n)</searchRegex>
                            <replacement>$1</replacement>
                        </replaceRegex>
                    </java>
                    <pom>
                        <sortPom>
                            <encoding>UTF-8</encoding>
                            <nrOfIndentSpace>4</nrOfIndentSpace>
                            <keepBlankLines>true</keepBlankLines>
                            <indentBlankLines>false</indentBlankLines>
                            <indentSchemaLocation>true</indentSchemaLocation>
                            <spaceBeforeCloseEmptyElement>true</spaceBeforeCloseEmptyElement>
                            <sortModules>false</sortModules>
                            <sortExecutions>false</sortExecutions>
                            <predefinedSortOrder>custom_1</predefinedSortOrder>
                            <expandEmptyElements>false</expandEmptyElements>
                            <sortProperties>false</sortProperties>
                        </sortPom>
                        <replace>
                            <name>Leading blank line</name>
                            <search>project</search>
                            <replacement>project</replacement>
                        </replace>
                    </pom>
                    <markdown>
                        <includes>
                            <include>docs/**/*.md</include>
                        </includes>
                        <excludes>
                            <exclude>**/.github/**/*.md</exclude>
                        </excludes>
                        <flexmark />
                    </markdown>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <phase>compile</phase>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>license-maven-plugin</artifactId>
                <version>2.0.0</version>
                <configuration>
                    <!-- here add configures -->
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.rat</groupId>
                <artifactId>apache-rat-plugin</artifactId>
                <version>0.14</version>
                <configuration>
                    <consoleOutput>true</consoleOutput>
                    <excludeSubProjects>false</excludeSubProjects>
                    <numUnapprovedLicenses>0</numUnapprovedLicenses>
                    <licenses>
                        <license implementation="org.apache.rat.analysis.license.SimplePatternBasedLicense">
                            <licenseFamilyCategory>AL2</licenseFamilyCategory>
                            <licenseFamilyName>Apache License 2.0</licenseFamilyName>
                            <notes />
                            <patterns>
                                <pattern>Licensed to the Apache Software Foundation (ASF) under
                                    one</pattern>
                            </patterns>
                        </license>
                    </licenses>
                    <licenseFamilies>
                        <licenseFamily implementation="org.apache.rat.license.SimpleLicenseFamily">
                            <familyName>Apache License 2.0</familyName>
                        </licenseFamily>
                    </licenseFamilies>
                    <excludes>
                        <!-- Exclude license copies -->
                        <exclude>licenses/**</exclude>

                        <!-- Generated content -->
                        <exclude>LICENSE</exclude>
                        <exclude>NOTICE</exclude>

                        <!-- Documents -->
                        <exclude>**/*.md</exclude>
                        <exclude>**/*.MD</exclude>
                        <exclude>**/*.txt</exclude>
                        <exclude>**/*.json</exclude>
                        <exclude>**/docs/**</exclude>
                        <exclude>**/*.csv</exclude>
                        <exclude>**/logs/**</exclude>
                        <exclude>**/*.log</exclude>

                        <!-- Web configure files -->
                        <exclude>**/.env</exclude>
                        <exclude>**/.env.production</exclude>
                        <exclude>**/.eslintignore</exclude>
                        <exclude>**/.eslintrc</exclude>
                        <exclude>**/.headerignore</exclude>
                        <exclude>**/.prettierrc</exclude>
                        <exclude>**/.stylelintrc</exclude>
                        <exclude>**/build/**</exclude>
                        <exclude>**/node_modules/**</exclude>

                        <!-- Github -->
                        <exclude>**/.github/**</exclude>

                        <!-- Intellij IDEA -->
                        <exclude>**/*.iml</exclude>
                        <exclude>**/.idea/**</exclude>

                        <!-- Git files -->
                        <exclude>**/.gitignore</exclude>
                        <exclude>**/.gitmodules</exclude>
                        <exclude>**/.git/**</exclude>

                        <!-- Build targets -->
                        <exclude>**/target/**</exclude>
                        <exclude>**/out/**</exclude>
                        <exclude>**/dist/**</exclude>

                        <!-- Test case : certificates used in test cases -->
                        <exclude>**/tubemq-core/src/test/resources/*.keystore</exclude>
                        <!-- Test case : temporary data for test cases -->
                        <exclude>**/AgentBaseTestsHelper/**</exclude>
                        <!-- Test case : example jar for test cases -->
                        <exclude>**/manager-service/src/test/resources/plugins/manager-plugin-examples.jar</exclude>
                        <!-- Test case: flink sql comments statement support limit for end2end test cases -->
                        <exclude>**/resources/flinkSql/**</exclude>

                        <!-- Referenced 3rd codes -->
                        <exclude>**/resources/assets/lib/**</exclude>
                        <exclude>**/resources/assets/public/**</exclude>
                        <exclude>**/tubemq-client-cpp/src/any.h</exclude>
                        <exclude>**/tubemq-client-cpp/src/buffer.h</exclude>
                        <exclude>**/tubemq-client-cpp/third_party/**</exclude>

                        <!-- Go mod -->
                        <exclude>**/tubemq-client-go/go.mod</exclude>
                        <!-- Go sum -->
                        <exclude>**/tubemq-client-go/go.sum</exclude>
                        <!-- Docker build-->
                        <exclude>**/docker/docker-compose/**/**</exclude>

                    </excludes>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <phase>verify</phase>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <url>https://github.com/apache/inlong</url>
    <inceptionYear>2013</inceptionYear>

    <organization>
        <name>Apache Software Foundation</name>
        <url>https://www.apache.org/</url>
    </organization>

    <licenses>
        <license>
            <name>Apache License, Version 2.0</name>
            <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <developers>
        <developer>
            <organization>Apache InLong developers</organization>
            <organizationUrl>https://inlong.apache.org/</organizationUrl>
        </developer>
    </developers>

    <mailingLists>
        <mailingList>
            <name>InLong Developer List</name>
            <subscribe>dev-subscribe@inlong.apache.org</subscribe>
            <unsubscribe>dev-unsubscribe@inlong.apache.org</unsubscribe>
            <post>dev@inlong.apache.org</post>
        </mailingList>
    </mailingLists>

    <scm>
        <connection>scm:git:https://github.com/apache/inlong.git</connection>
        <developerConnection>scm:git:ssh://git@github.com:apache/inlong.git</developerConnection>
        <url>https://github.com/apache/inlong</url>
    </scm>

    <issueManagement>
        <system>Github</system>
        <url>https://github.com/apache/inlong/issues</url>
    </issueManagement>

    <ciManagement>
        <system>GitHub Actions</system>
        <url>https://github.com/apache/inlong/actions</url>
    </ciManagement>

</project>
